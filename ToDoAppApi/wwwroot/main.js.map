{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/to-do-app/to-do-app.component.html","./src/app/to-do-app/to-do-app.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todo-app';\n}\n","<app-to-do-app></app-to-do-app>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToDoAppComponent } from './to-do-app/to-do-app.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToDoAppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"add-task\">\n  <mat-form-field class=\"example-full-width\" appearance=\"standard\">\n    <mat-label>To do</mat-label>\n    <input matInput placeholder=\"Ex. bodybuilding\" [(ngModel)]=\"newTask\">\n  </mat-form-field>\n  <button mat-raised-button color=\"primary\" class=\"submit-button\" (click)=\"addTask()\">Add Task</button>\n</div>\n<div class=\"tasks\" *ngFor=\"let task of tasks\">\n  <mat-checkbox [ngClass]=\"task.done ? 'completed' : 'not-completed'\" [(ngModel)]=\"task.done\" (change)=\"updateTask(task)\">{{ task.name }}</mat-checkbox>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\nclass Task {\n  id: number | undefined;\n  name: string;\n  done: boolean;\n  constructor(name: string) {\n    this.name = name;\n    this.done = false;\n  }\n}\n\n@Component({\n  selector: 'app-to-do-app',\n  templateUrl: './to-do-app.component.html',\n  styleUrls: ['./to-do-app.component.css']\n})\nexport class ToDoAppComponent implements OnInit {\n\n  newTask = \"\";\n  tasks: Task[] = [];\n  private _http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this._http = http;\n  }\n\n  async ngOnInit() {\n    this.tasks = await this._http.get<Task[]>(\"/api/todo\").toPromise();\n  }\n\n  async addTask() {\n    let newTask: Task = new Task(this.newTask);\n    let newTaskId: number = await this._http.post<number>(\"/api/todo\", newTask).toPromise();\n    newTask.id = newTaskId;\n    this.tasks.push(newTask);\n    this.newTask = \"\";\n  }\n\n  async updateTask(task: Task) {\n    await this._http.put(`/api/todo/${task.id}`, task).toPromise();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}